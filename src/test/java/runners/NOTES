************PARALLEL TESTING**************************
We did parallel testing in TestNG with TestNG xml file.
Parallel testing is done only when we try to run multiple test cases.
Multiple test cases ==>> at the same time using multiple browser (simultaneously multiple chrome)

In Cucumber, doing parallel is a bit complicated.
To do parallel testing there are 2 keyword: Thread, Thread-Safe
Thread = means Browser 1, Browser 2, Browser 3. ==>> 1 set of test execution
Thread-Safe = You can run multiple browser at the same time.

How do we parallel testing?
Cucumber
TestNG xml file
Selenium Grid
Jenkins

Alternative(paid) tools for parallel testing (they have ready set up)
Sauce Lab
Browser Stack

==>>How do we do parallel testing in Cucumber?
        * First, We need to Maven installed in our computer
        * Check in the terminal if it is already installed ==> maven - version or maven --version or maven version
        * "mvn clean install" ==>> if you see BUILD SUCCESS you are ready to run parallel testing
        * We will create multiple Runners and run then at the same time using maven comment
        * Then we will configure our pom.xml file to support parallel testing
        * Surefire plugin
        * Failsafe plugin
        * These are not dependency, they are plugins.
        * And we need also Report Plugin, but we need it not to do parallel testing, we just need it to get some reports
        * So far we have only Cucumber reports in our framework (in Runner plugins xml, json, html reports)
        * We see them under target folder
         Then we create multiple runner classes that contain TestRunner in its name
        * Then We will run from terminal : mvn clean verify or mvn clean install

==>> Dependency Vs Plugin
Dependency : Provides set of classes. For example, selenium dependency provides multiple
classes such as Actions, JavascriptExecutor, findElements, â€¦ Selenium dependency is a bunch of
ready classes and method

Plugins: Provides a feature that is limited. It provides the extra functionality during the execution.
For example, surefire-plugin enables parallel execution during the test execution.


**************************** REPORTS IN CUCUMBER ***************************
==>> What are different ways to get reports in cucumber?
 i) With cucumber plugins in the runner class. No need to add any dependency. Normally this set up is good enough
    Html,json,xml
 ii) Extent Spark reports: We use cucumber spark adaptors to get more advanced reports
        Add dependencies
        Add configuration files
 iii) Cucumber jvm reports plugin (maven-cucumber-reporting dependency)
        This generated by running from the command prompt(mvn clean verify) (parallel testing)

==>> How to attach a screenshot in the html report?
In my framework, I have Hooks class. In @after method class I have getScreenShotAs method.
It captures and attaches the screenshot when a test case fails.
In addition to this automatic screenshot setup, I have another method(capture the screenshot) that I run ANYTIME to capture the screenshot.
I use this at the end of assertions as a proof of test execution


**************************** SPARK REPORTS *********************************
1. Create extent-config.xml  under resources folder
2. Create extent.properties  under resources folder
3. Add dependencies in pom.xml https://mvnrepository.com/artifact/tech.grasshopper/extentreports-cucumber7-adapter/1.6.0
   Add Cucumber extent report dependency
            <!-- https://mvnrepository.com/artifact/tech.grasshopper/extentreports-cucumber7-adapter -->
                    <dependency>
                        <groupId>tech.grasshopper</groupId>
                        <artifactId>extentreports-cucumber7-adapter</artifactId>
                        <version>1.6.0</version>
                    </dependency>
4.Add sparks report plugin, in Runner class
"com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter:"
5. extent-config.xml and extent.properties are working together.
6. Spark.html -> right click -> open in Explorer -> find the Spark report and screenshot in your computer and share with team or add it into Jira



*********************** UPLOAD CUCUMBER REPORTS TO THE CLOUD ******************
# 1. Create a properties under resources folder : cucumber.properties
# 2. Add the code in that file : cucumber.publish.enabled=true
# 3. Run your test. Then you should see the cucumber reports on the cloud. But that reports will be deleted automatically within 24 hours.
     We need to login with GitHub to keep it forever
     On the console scroll down and click on the link under 'view your Cucumber repost at:'
     This repost is the same which is generated on our local. We can share the url with the team.
     Report includes also a screenshot because we have Hooks plugin. (if test fails)

# 4. Click on login with GitHub > Authorize SmartBear
# 5. Then create new collection and give a name
# 6. Add the generated token in the cucumber.properties
# 7. Run test one more time. Then we should see the reports in the collection folder
#  On the console scroll down and click on the link under 'view your Cucumber repost at:'



























